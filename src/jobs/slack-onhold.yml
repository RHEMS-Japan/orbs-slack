description: >
  Insert this job in-line with your standard CircleCI on-hold notification jobs
  to simulataniously send a Slack notification containing a link to the paused Workflow.
docker:
  - image: "cimg/base:stable"
parameters:
  mentions:
    type: string
    default: ""
    description: >
      Exports to the "$SLACK_PARAM_MENTIONS" environment variable for use in
      templates.

      Mention users via the @ symbol: "@USER"

      If the username contains a space, the Slack ID must be used with angled
      brackets: "<@U8XXXXXXX>"
  image-url:
    type: string
    default: ""
    description: "Image to be attached to the notification message"
  access-token:
    type: string
    default: $SLACK_ACCESS_TOKEN
    description: Access token for slack API.
  channel:
    type: string
    default: $SLACK_DEFAULT_CHANNEL
    description: >
      Select which channel in which to post to. Channel name or ID will work.
      You may include a comma separated list of channels if you wish to post to
      multiple channels at once. Set the "SLACK_DEFAULT_CHANNEL" environment
      variable for the default channel.
  repo:
    type: string
    default: $CIRCLE_PROJECT_REPONAME
  message:
    type: string
    default: ""
    description: >
      For the default value, the commit message will be used.
  commit:
    type: string
    default: ""
    description: >
      For the default value, the first 7 characters of the commit hash will be used.
  author:
    type: string
    default: $CIRCLE_USERNAME
steps:
  - checkout
  - run:
      name: set env
      command: |
        echo "export SLACK_ACCESS_TOKEN=$(eval echo << parameters.access-token >>)" >> $BASH_ENV

        echo "export REPO=$(eval echo << parameters.repo >>)" >> $BASH_ENV

        if [ -n "<< parameters.message >>" ]; then
          echo "export MESSAGE=$(eval echo << parameters.message >>)" >> $BASH_ENV
        else
          echo "export MESSAGE=\"`git --no-pager log -1 --pretty=format:'%s'`\"" >> $BASH_ENV
        fi

        if [ -n "<< parameters.commit >>" ]; then
          echo "export COMMIT=$(eval echo << parameters.commit >>)" >> $BASH_ENV
        else
          echo "export COMMIT=${CIRCLE_SHA1:0:7}" >> $BASH_ENV
        fi

        echo "export AUTHOR=$(eval echo << parameters.author >>)" >> $BASH_ENV
  - when:
      condition: << parameters.mentions >>
      steps:
        - run: echo "export MENTIONS=<< parameters.mentions >>" >> $BASH_ENV
  - when:
      condition: << parameters.image-url >>
      steps:
        - official-slack/notify:
            event: always
            mentions: << parameters.mentions >>
            channel: << parameters.channel >>
            custom: |
              {
                "blocks": [
                  {
                    "type": "image",
                    "image_url": "https://storage.googleapis.com/rhems-slack-images/Onhold.png?fdas",
                    "alt_text": "On hold"
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "${MENTIONS}\n*Branch / Tag:*\t${CIRCLE_BRANCH}${CIRCLE_TAG}"
                    },
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Repo:*\t\n${REPO}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Message:*\t\n${MESSAGE}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Commit:*\t\n${COMMIT}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Author:*\t\n${AUTHOR}"
                      }
                    ],
                    "accessory": {
                      "type": "image",
                      "image_url": "<< parameters.image-url >>",
                      "alt_text": "thumbnail"
                    }
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "View Workflow"
                        },
                        "url": "https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}"
                      }
                    ]
                  }
                ]
              }
  - unless:
      condition: << parameters.image-url >>
      steps:
        - official-slack/notify:
            event: always
            mentions: << parameters.mentions >>
            channel: << parameters.channel >>
            custom: |
              {
                "blocks": [
                  {
                    "type": "image",
                    "image_url": "https://storage.googleapis.com/rhems-slack-images/Onhold.png?fdas",
                    "alt_text": "On hold"
                  },
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "${MENTIONS}\n*Branch / Tag:*\t${CIRCLE_BRANCH}${CIRCLE_TAG}"
                    },
                    "fields": [
                      {
                        "type": "mrkdwn",
                        "text": "*Repo:*\t\n${CIRCLE_PROJECT_REPONAME}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Message:*\t\n${GIT_COMMIT_MSG}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Commit:*\t\n${CIRCLE_SHA1:0:7}"
                      },
                      {
                        "type": "mrkdwn",
                        "text": "*Author:*\t\n${CIRCLE_USERNAME}"
                      }
                    ]
                  },
                  {
                    "type": "actions",
                    "elements": [
                      {
                        "type": "button",
                        "text": {
                          "type": "plain_text",
                          "text": "View Workflow"
                        },
                        "url": "https://circleci.com/workflow-run/${CIRCLE_WORKFLOW_ID}"
                      }
                    ]
                  }
                ]
              }
