description: >
  Notify the Slack channel that the job has failed.
parameters:
  mentions:
    type: string
    default: ""
    description: >
      Mention users via the @ symbol: "@USER"

      If the username contains a space, the Slack ID must be used with angled
      brackets: "<@U8XXXXXXX>"
  access-token:
    type: string
    default: $SLACK_ACCESS_TOKEN
    description: Access token for slack API.
  channel:
    type: string
    default: $SLACK_DEFAULT_CHANNEL
    description: >
      Select which channel in which to post to. Channel name or ID will work.
      You may include a comma separated list of channels if you wish to post to
      multiple channels at once. Set the "SLACK_DEFAULT_CHANNEL" environment
      variable for the default channel.
  branch-tag:
    type: string
    default: $CIRCLE_BRANCH$CIRCLE_TAG
  repo:
    type: string
    default: $CIRCLE_PROJECT_REPONAME
  message:
    type: string
    default: ""
    description: >
      For the default value, the commit message will be used.
  commit:
    type: string
    default: ""
    description: >
      For the default value, the first 7 characters of the commit hash will be used.
  author:
    type: string
    default: $CIRCLE_USERNAME
steps:
  - checkout
  - run:
      name: set env
      command: |
        echo "export SLACK_ACCESS_TOKEN=$(eval echo << parameters.access-token >>)" >> $BASH_ENV

        echo "export BRANCH_TAG=$(eval echo << parameters.branch-tag >>)" >> $BASH_ENV

        echo "export REPO=$(eval echo << parameters.repo >>)" >> $BASH_ENV

        if [ -n "<< parameters.message >>" ]; then
          echo "export MESSAGE=$(eval echo << parameters.message >>)" >> $BASH_ENV
        else
          echo "export MESSAGE=\"`git --no-pager log -1 --pretty=format:'%s'`\"" >> $BASH_ENV
        fi

        if [ -n "<< parameters.commit >>" ]; then
          echo "export COMMIT=$(eval echo << parameters.commit >>)" >> $BASH_ENV
        else
          echo "export COMMIT=${CIRCLE_SHA1:0:7}" >> $BASH_ENV
        fi

        echo "export AUTHOR=$(eval echo << parameters.author >>)" >> $BASH_ENV
  - official-slack/notify:
      event: fail
      mentions: << parameters.mentions >>
      channel: << parameters.channel >>
      custom: |
        {
          "blocks": [
            {
              "type": "image",
              "image_url": "https://storage.googleapis.com/rhems-slack-images/Failed.png?fdsa",
              "alt_text": "Job failed"
            },
            {
              "type": "section",
              "fields": [
                {
                  "type": "mrkdwn",
                  "text": "${SLACK_PARAM_MENTIONS}\n*Job name:*\t${CIRCLE_JOB}"
                }
              ],
              "accessory": {
                "type": "button",
                "text": {
                  "type": "plain_text",
                  "text": "View Job"
                },
                "url": "${CIRCLE_BUILD_URL}"
              }
            },
            {
              "type": "context",
              "elements": [
                {
                  "type": "mrkdwn",
                  "text": "*Branch / Tag:*\t${BRANCH_TAG}"
                }
              ]
            },
            {
              "type": "context",
              "elements": [
                {
                  "type": "mrkdwn",
                  "text": "*Repo:*\t\n${REPO}"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Message:*\t\n${MESSAGE}"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Commit:*\t\n${COMMIT}"
                },
                {
                  "type": "mrkdwn",
                  "text": "*Author:*\t\n${AUTHOR}"
                }
              ]
            }
          ]
        }
